$fishAtAfter: (
    fish_1: (
        attr: "fish_1",
        bg: "fish_1.png",
        offset-top: 3%,
        offset-right: -5%
    ),
    fish_2: (
        attr: "fish_2",
        bg: "fish_2.png",
        offset-top: 3%,
        offset-right: -5%
    ),
    fish_3: (
        attr: "fish_3",
        bg: "fish_3.png",
        offset-top: 3%,
        offset-right: -5%
    ),
    treasurebox: (
        attr: "treasurebox",
        bg: "treasurebox.png",
        offset-top: 3%,
        offset-right: -5%
    ),
    // 'fish_1.png', 'fish_2.png', 'fish_3.png', 'treasurebox.png';
);

.daily_header_img {
    display: block;
    width: 100%;
    height: 16vh;
    min-height: 120px;
    padding: 1rem;
    box-sizing: border-box;
    background: url('../img/pc/daily_quest_header.png') no-repeat center;
    background-size: contain;
}
.quest_list {
    @include flexBox(column, center, flex-start);
    flex: 1;
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    padding: 0 2rem;
    @each $key, $value in $fishAtAfter {
        $attr: map-get($value, attr);
        $bg: map-get($value, bg);
        $top: map-get($value, offset-top);
        $right: map-get($value, offset-right);
        li {
            @include flexBox(row, center, center);
            position: relative;
            width: 100%;
            height: 10vh;
            min-width: 260px;
            min-height: 60px;
            margin: 0.3rem 0;
            border-image-slice: 48 fill;
            border-image-width: 20% 8% 20% 8%;
            border-image-outset: 0.5rem;
            border-image-repeat: stretch;
            border-image-source: url('../img/pc/quest_bg.png');
            cursor: pointer;
            &::before {
                content: "";
                position: absolute;
                top: 0;
                left: 0;
                z-index: -1;
                width: 100%;
                height: 100%;
                opacity: 0;
                background: url('../img/pc/quest_bg_blur.png') no-repeat center;
                background-size: contain;
                transition: all 0.3s ease-in-out;
            }
            &:hover::before {
                transition: all 0.3s ease-in-out;
                opacity: 1;
                filter: blur(6px);
            }

            .lock_block {
                position: absolute;
                left: 5%;
                width: 5vh;
                height: 100%;
                .lock {
                    position: relative;
                    display: block;
                    width: 100%;
                    height: 100%;
                    background: url('../img/pc/lock.png') no-repeat center;
                    background-size: contain;
                }
            }

            &[data-type="#{$attr}"]::after {
                content: "";
                position: absolute;
                width: 10vh;
                height: 100%;
                top: $top;
                right: $right;
                background: url('../img/pc/#{$bg}') no-repeat center;
                background-size: contain;
            }
            span {
                font-weight: bold;
                font-size: 1.2rem;
                color: #fff;
            }
        }
    } 
}